package com.api.controller;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.api.cliente.Cliente;
import com.api.cliente.ClienteRepository;
import com.api.cliente.dadosCadastroCliente;
import com.api.cliente.dadosListagemCliente;

import jakarta.transaction.Transactional;

@RestController
@RequestMapping("/cliente")
public class clienteController {

	@Autowired
	private ClienteRepository clienteRepository; 
	
	@PostMapping
	@Transactional
	public ResponseEntity<?> cadastrar(@RequestBody dadosCadastroCliente dados){
		var cliente = new Cliente(dados);
		clienteRepository.save(cliente);
		URI location = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(cliente.getId())
.toUri();
		return ResponseEntity.created(location).body(cliente);
	}
	@GetMapping
	public ResponseEntity<list<dadosListagemCliente>> listar(@RequestParam(required = false)String search) {
		List<DadosListagemCliente> lista;
		if(search != null) {
			lista = clienteRepository.findAll().stream().map(dadosListagemCliente::new).toList();
		}
		return ResponseEntity.ok(lista);
	}
	
}
